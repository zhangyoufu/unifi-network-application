name: build
on:
  workflow_dispatch:
    inputs:
      version:
        description: version, <major>.<minor>.<patch>
        required: true
      url:
        description: URL for UniFi.unix.zip
        required: true
      md5:
        description: MD5 checksum for UniFi.unix.zip
        default: ''
      sha256:
        description: SHA256 checksum for UniFi.unix.zip
        default: ''
run-name: build ${{ github.event.inputs.version }}
defaults:
  run:
    shell: bash
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - name: Dump inputs
      run: jq .inputs "${GITHUB_EVENT_PATH}"
    - name: Clone repository
      uses: actions/checkout@v3
    - name: Download UniFi.unix.zip
      env:
        URL: ${{ github.event.inputs.url }}
      run: wget --quiet --show-progress --progress=dot:giga --output-document UniFi.unix.zip "$URL"
    - name: Verify MD5 checksum
      if: github.event.inputs.md5 != ''
      env:
        MD5: ${{ github.event.inputs.md5 }}
      run: echo "$MD5  UniFi.unix.zip" | md5sum --status --check
    - name: Verify SHA256 checksum
      if: github.event.inputs.sha256 != ''
      env:
        SHA256: ${{ github.event.inputs.sha256 }}
      run: echo "$SHA256  UniFi.unix.zip" | sha256sum --status --check
    - name: Extract UniFi.unix.zip
      working-directory: docker
      run: unzip -q ../UniFi.unix.zip
    - name: Pre-build adjustment
      working-directory: docker/UniFi
      run: |-
        rm bin/mongod
        rm -rf lib/native/Mac
        rm -rf lib/native/Windows
        rm lib/native/Linux/*/libubnt_sdnotify_jni.so
        rm readme.txt
        rmdir bin
        mkdir data
        mkdir logs
        mkdir -p run/work/ROOT
        mkdir -p work/Tomcat/localhost/ROOT
    - name: Register qemu-user against binfmt_misc
      uses: docker/setup-qemu-action@v2
      with:
        platforms: arm,arm64
    - name: Register BuildKit node
      uses: docker/setup-buildx-action@v2
    - name: Login to image registry
      if: github.ref == 'refs/heads/master'
      uses: docker/login-action@v2
      with:
        username: ${{ vars.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        context: docker
        provenance: false
        platforms: |-
          linux/amd64
          linux/arm64
          linux/arm/v7
        outputs: type=image,oci-mediatypes=true
        tags: ${{ vars.IMAGE_PATH }}:${{ github.event.inputs.version }}
        push: ${{ github.ref == 'refs/heads/master' }}
